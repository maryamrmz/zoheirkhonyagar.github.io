{"version":3,"sources":["webpack:///./src/pages/blog.js","webpack:///./src/components/menu.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","blogPage","_ref","data","a","createElement","title","className","allMarkdownRemark","edges","map","post","key","node","id","to","frontmatter","path","author","date","Menu","react_default","gatsby_browser_entry","Header","siteTitle","style","menu","propTypes","PropTypes","string","defaultProps","Footer","class","href","Layout","children","query","render","Fragment","header","site","siteMetadata","footer","_755544856","isRequired","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","array","arrayOf"],"mappings":"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","file":"component---src-pages-blog-js-c5f955050a986cc566ac.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nconst blogPage = ({data}) => (\n\t<Layout>\n\t\t<SEO title=\"blog\" />\n\t\t<span className=\"yellow-bgcolor dark-color\"></span>\n\t\t<h1 className=\"page-title yellow-bgcolor dark-color\">Latest Posts</h1>\n\t\t{data.allMarkdownRemark.edges.map(post => (\n\t\t\t<div key={ post.node.id }>\n\t\t\t\t<h3>\n\t\t\t\t<Link to={ post.node.frontmatter.path } >{ post.node.frontmatter.title }</Link>\n\t\t\t\t</h3>\n\t\t\t\t<small>Posted by <span className=\"yellow-color\">{ post.node.frontmatter.author }</span> on <span className=\"yellow-color\">{post.node.frontmatter.date} </span></small>\n\t\t\t\t<br\t/>\n\t\t\t\t<br\t/>\n\t\t\t\t<hr />\n\t\t\t</div>\n\t\t))}\n\t</Layout>\n)\n\nexport const pageQuery = graphql`\n\tquery BlogIndexQuery {\n\t\tallMarkdownRemark (\n\t\t\tsort: { order: DESC, fields: [frontmatter___date] }\n\t\t) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tid\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\tpath\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tdate\n\t\t\t\t\t\tauthor\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`\n\nexport default blogPage","import { Link } from 'gatsby'\nimport React from 'react'\n\nconst Menu = () => (\n    <ul>\n        <li><Link to=\"/blog\" >Blog</Link></li>\n        <li><Link to=\"/\" >About</Link></li>\n        <li><Link to=\"/\" >Contact</Link></li>\n    </ul>\n)\n\nexport default Menu\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport Menu from '../components/menu'\n\nconst Header = ({ siteTitle }) => (\n<header className=\"header-container\">\n\t<div className=\"container\">\n\t\t<nav>\n\t\t\t<h1 style={{  }}>\n\t\t\t\t<Link to=\"/\" >\n\t\t\t\t\t{siteTitle}\n\t\t\t\t</Link>\n\t\t\t</h1>\n\t\t\t<Menu />\n\t\t</nav>\n\t</div>\n</header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from 'react'\n\nconst Footer = () => (\n    <footer>\n        <div className=\"container\">\n            <div class=\"delimiter\"></div>\n            <p>Â© 2019, Built with <a href=\"https://www.gatsbyjs.org\">Gatsby</a></p>\n        </div>\n    </footer>\n)\n\nexport default Footer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport Footer from './footer'\nimport './layout.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div className=\"container\">\n          {children}\n        </div>\n        <Footer />\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}