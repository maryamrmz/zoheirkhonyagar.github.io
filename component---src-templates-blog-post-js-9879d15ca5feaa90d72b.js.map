{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Temaplate","postQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","_ref","post","data","markdownRemark","a","createElement","title","frontmatter","description","excerpt","to","className","date","dangerouslySetInnerHTML","__html","html","SEO","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","query","detailsQuery","render","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","Header","siteTitle","react_default","style","gatsby_browser_entry","Footer","href","Layout","children","Fragment","header","footer","_755544856"],"mappings":"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","file":"component---src-templates-blog-post-js-9879d15ca5feaa90d72b.js","sourcesContent":["import React from 'react'\nimport Link from 'gatsby-link'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nexport default function Temaplate({ data }) {\n  const post = data.markdownRemark\n\n  return (\n    <Layout>\n      <div>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n        />\n        <Link to=\"/\">\n          <b>{'< return { main }'}</b>\n        </Link>\n        <hr />\n        <h1 className=\"article-title\">{post.frontmatter.title}</h1>\n        <p className=\"date\">{post.frontmatter.date}</p>\n        <div className=\"body\" dangerouslySetInnerHTML={{ __html: post.html }} />\n      </div>\n    </Layout>\n  )\n}\n\nexport const postQuery = graphql`\n  query BlogPostByPath($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        path\n        title\n        author\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n    }\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n              {\n                name: `google-site-verification`,\n                content: 'EppOQEwHsoUn56OnuPgmphVCH5CQzfh_24BztMV_h3g',\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n// import Menu from '../components/menu'\n\nconst Header = ({ siteTitle }) => (\n  <header className=\"header-container\">\n    <div className=\"container\">\n      <h1 style={{}}>\n        <Link to=\"/\">{siteTitle}</Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from 'react'\n\nconst Footer = () => (\n  <footer>\n    <div className=\"container\">\n      <div className=\"delimiter\"></div>\n      <p>\n        Â© 2019, Built with <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n      </p>\n    </div>\n  </footer>\n)\n\nexport default Footer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport Footer from './footer'\nimport './layout.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div className=\"container\">\n          {children}\n        </div>\n        <Footer />\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}